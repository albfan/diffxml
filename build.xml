<?xml version="1.0"?>

<!-- 
     Build file for compilation/testing of diffxml source

     Notes:     This is a build file for use with the Jakarta Ant build tool.
     Requires:  jakarta-ant from http://jakarta.apache.org
     Usage: ant <target>
     Main targets: compileDiffXML - compiles the classes
                   jarDiffXML     - packages classes as a jar
                   binDist        - creates binary distribution
                   srcDist        - creates source distribution
                   quickTest      - verifies that the build is working
                   fullTest       - performs further testing
                   clean          - deletes the build
                   install        - installs diffxml to system
     Default target: compileDiffXML
  -->

  <project default="compileDiffXML" basedir=".">


<!-- Global properties -->

  <property name="src.dir" value="src"/>
  <property name="install.dir" value="/usr/local"/>
  <property name="build.dir" value="build"/>
  <property name="lib.dir" value="lib"/>
  <property name="build.compiler" value="modern"/>

  <property name="package" value="org.diffxml"/>
  <property name="version" value="0.96B" />
  <property name="diffxml.class" value="${package}/diffxml/DiffXML"/>
  <property name="patch.class" value="${package}/patchxml/PatchXML"/>
  <property name="test1.file" value="test1a.xml"/>
  <property name="test2.file" value="test2a.xml"/>
  <property name="diffOut.file" value="diff_out.xml"/>
  <property name="patchOut.file" value="patch_out.xml"/>


<!-- Classpath -->

  <path id="classpath">
      <pathelement location="${build.dir}"/>
      <pathelement location="${build.dir}/diffxml.jar"/>

      <fileset dir="${lib.dir}">
	  <include name="*.jar"/>
      </fileset>
  </path>

<!-- Build targets -->


  <target name="buildDirStructure">
    <mkdir dir="${build.dir}"/>
  </target>


  <target name="compileDiffXMLWithSource"
          depends="compileDiffXML">

          <antcall target="copySource"/>

  </target>

  <target name="compileDiffXML"
          depends="buildDirStructure"
          description="compiles classes">

    <javac srcdir="${src.dir}" 
           destdir="${build.dir}"
	   debug="on" debuglevel="lines,vars,source"
           classpathref="classpath"/>

  </target>


  <target name="jarDiffXML" 
          depends="compileDiffXML"
          description="packages all classes into a jar">

          <jar jarfile="${build.dir}/diffxml.jar" basedir="${build.dir}/"/>
    <antcall target="cleanClasses"/>

  </target>


<!-- Build Distibutions -->

  <target name="binDist"
          depends="jarDiffXML"
          description="creates binary distribution">

          <echo message="build dir = ${build.dir}"/>
          <copy todir="${build.dir}/diffxml">
              <fileset dir=".">
                  <exclude name="build/"/>
                  <exclude name="test/"/>
                  <exclude name="suite/"/>
                  <exclude name="lib/"/>
                  <exclude name="src/"/>
                  <exclude name="INSTALL*"/>
                  <exclude name="diffxml_checks.xml"/>
                  <exclude name="check.sh"/>
                  <exclude name="*gz"/>
                  <exclude name=".*"/>
                  <exclude name=".*/"/>
              </fileset>
          </copy>

          <copy file="INSTALL.bin" 
              tofile="${build.dir}/diffxml/INSTALL.txt"/>

          <copy file="${build.dir}/diffxml.jar"
              todir="${build.dir}/diffxml/lib/"/>


          <antcall target="tarDiffXML"/>

          <gzip zipfile="${build.dir}/diffxml-${version}.tar.gz" 
              src="${build.dir}/diffxml.tar"/>

          <zip destfile="${build.dir}/diffxml-${version}.zip">
              <zipfileset dir="${build.dir}/diffxml" filemode="755" prefix="diffxml">
                  <include name="*sh"/>
              </zipfileset>
              <zipfileset dir="${build.dir}/diffxml" prefix="diffxml/">
                  <exclude name="*sh"/>
              </zipfileset>
          </zip>

          <delete file="${build.dir}/diffxml.tar"/>  

  </target>

  <target name="tarDiffXML">
          <tar tarfile="${build.dir}/diffxml.tar">
              <tarfileset mode="755" dir="${build.dir}/diffxml"
                  prefix="diffxml">
                  <include name="*sh"/>
              </tarfileset>
              <tarfileset dir="${build.dir}/diffxml"
                  prefix="diffxml/">
                  <exclude name="*sh"/>
              </tarfileset>
          </tar>
  </target>

  <target name="srcDist"
          depends="jarDiffXML"
          description="creates source distribution">

          <antcall target="copySource"/>


          <copy file="INSTALL.src" 
              tofile="${build.dir}/diffxml/INSTALL.txt"/>

          <antcall target="tarDiffXML"/>

          <gzip zipfile="${build.dir}/diffxml-src-${version}.tar.gz"
                src="${build.dir}/diffxml.tar"/>

            <zip destfile="${build.dir}/diffxml-src-${version}.zip">
                <zipfileset dir="${build.dir}/diffxml" filemode="755" prefix="diffxml">
                    <include name="*sh"/>
                </zipfileset>
                <zipfileset dir="${build.dir}/diffxml" prefix="diffxml/">
                    <exclude name="*sh"/>
                </zipfileset>
            </zip>

          <delete file="${build.dir}/diffxml.tar"/>
  </target>

  <target name="copySource"
          description="copies source files to build">

          <copy todir="${build.dir}/diffxml">
              <fileset dir=".">
                  <exclude name="build/"/>
                  <!--<exclude name="test/"/>-->
                  <exclude name="INSTALL*"/>
                  <exclude name="diffxml_checks.xml"/>
		  <exclude name="suite/broken/"/>
                  <exclude name="*gz"/>
                  <exclude name=".*"/>
                  <exclude name=".*/"/>
              </fileset>
          </copy>
  </target>

  <!-- Install to /usr/local or given install dir -->

  <target name="install"
      description="installs DiffXML to /usr/local. Run as root. Install to another location with -Dinstall.dir='/my/location/'">

      <copy file="lib/diffxml.jar" todir="${install.dir}/lib"/>
      <chmod file="${install.dir}/lib/diffxml.jar" perm="ugo+r"/>

      <chmod file="diffxml_install.sh" perm="ugo+rx"/>
      <chmod file="patchxml_install.sh" perm="ugo+rx"/>

      <copy file="diffxml_install.sh" tofile="${install.dir}/bin/diffxml/"/>
      <copy file="patchxml_install.sh" tofile="${install.dir}/bin/patchxml/"/>

      <replace file="${install.dir}/bin/diffxml" token="@INSTALL_DIR@" value="${install.dir}"/>
      <replace file="${install.dir}/bin/patchxml" token="@INSTALL_DIR@" value="${install.dir}"/>

      <chmod file="${install.dir}/bin/diffxml" perm="ugo+rx"/>
      <chmod file="${install.dir}/bin/patchxml" perm="ugo+rx"/>

  </target>

<!-- Test targets -->

  <target name="quickTest" 
          depends="testDiffXML, testPatch, testEquivalence"
          description="tests the build"/>

  <target name="testDiffXML">
    <echo message="Executing: diffxml ${test1.file} ${test2.file}"/>
    <java classname="${diffxml.class}" 
          dir="${build.dir}" 
          fork="yes"
          classpathref="classpath"
          output="${diffOut.file}">
       <arg value="../${test1.file}"/>  
       <arg value="../${test2.file}"/>  
     </java>
  </target>
  	
  <target name="testPatch">
    <echo message="Executing: patchxml ${test1.file} ${diffOut.file}"/>
    <java classname="${patch.class}" 
          dir="${build.dir}" 
          fork="yes"
          classpathref="classpath"
          failonerror="true"
          output="${patchOut.file}">
       <arg value="../${test1.file}"/>
       <arg value="../${diffOut.file}"/>
     </java>
  </target>


  <target name="testEquivalence" description="tests diffxml and patchxml">
    <echo message="Executing: diffxml -q ${patchOut.file} ${test2.file}"/>
    <echo message="An exit status of 0 confirms that the compared files are equivalent."/>
    <java classname="${diffxml.class}" 
          dir="${build.dir}" 
          fork="yes"
          classpathref="classpath"
          failonerror="true">
       <arg value="-q"/>  
       <arg value="../${patchOut.file}"/>  
       <arg value="../${test2.file}"/>  
     </java>

    <delete file="${diffOut.file}"/>
    <delete file="${patchOut.file}"/>
  </target>

  <!-- Run the test suite -->

  <target name="fullTest" depends="compileDiffXML" 
          description="Runs the full test suite">

      <junit fork="yes" printsummary="yes" showoutput="yes" haltonerror="yes">
          <classpath>
              <pathelement location="${lib.dir}/junit-4.4.jar"/>
              <pathelement location="${build.dir}"/>
	  </classpath>
          <batchtest>
	      <fileset dir="src/test">
	          <include name="**/SuiteRunner.java"/>
              </fileset>
	      <formatter type="plain" usefile="false"/>
	  </batchtest>
      </junit>

  </target>

  <!-- ctags -->
  <target name="tags">
       <exec executable="ctags">
	   <arg line="--recurse=yes"/>
	   <arg line="--links=yes"/>
	   <arg line="--java-types=cimp"/>
	   <arg line="-f .tags ."/>
       </exec>
   </target>

  <!-- Clean targets -->

  <target name="cleanClasses" description="deletes compiled classes">
    <delete dir="${build.dir}/${package}" includeEmptyDirs="true"/>
  </target>

  <target name="clean" description="deletes build directory">
    <delete dir="${build.dir}" includeEmptyDirs="true"/>
  </target>

</project>

